<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AS.IBAN</name>
    </assembly>
    <members>
        <member name="T:AS.IBAN.DAL.Default.XmlDataServiceDefault">
            <summary>
            The default xml data service implementation. This class is responsible if no language specific data service was found.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="T:AS.IBAN.DAL.XmlData">
            <summary>
            An abstract class that defines methods for all data service classes.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="T:AS.IBAN.DAL.IDataServiceDefault">
            <summary>
            Interface for an default dataservice. Defines methods to load country unspecific data.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.DAL.IDataServiceDefault.LoadCountry(AS.IBAN.Model.ECountry)">
            <summary>
            Loads a Country to a given country code.
            </summary>
            <param name="country_code">The given country code.</param>
            <returns>The loaded country.</returns>
        </member>
        <member name="M:AS.IBAN.DAL.XmlData.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="fileNameIbanFormat">Filename of xml file containing iban formats of each country.</param>
        </member>
        <member name="M:AS.IBAN.DAL.XmlData.LoadData(System.String,System.String,System.Nullable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Gets XElements out of an specific xml file depending on attributes.
            </summary>
            <param name="filename">The filename of the xml file.</param>
            <param name="rootElementName">Name of the root element from which the data should be loaded.</param>
            <param name="keyValue">A KeyValuePair which contains the element key (for example "id") and the 
            value for that key (for example "1") to specify which element should be loaded.</param>
            <returns>A List of XElement objects that we're found in the file.</returns>
            <exception cref="T:AS.IBAN.Helper.IbanException">
            <list type="table">
                <item>
                    <term><see cref="T:AS.IBAN.Model.RuleType"/></term>
                    <description>DataLoadFailure</description>
                    <description>When data could not be loaded.</description>
                </item>
            </list>
            </exception>
        </member>
        <member name="M:AS.IBAN.DAL.XmlData.ValidateXml(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Checks if a xml file is valid to it's defined schema (xsd file).
            </summary>
            <param name="xDoc">The given XDocument (contains the xml elements).</param>
            <param name="filenameXml">The filename of the xml file.</param>
            <exception cref="T:AS.IBAN.Helper.IbanException">
            <list type="table">
                <item>
                    <term><see cref="T:AS.IBAN.Model.RuleType"/></term>
                    <description>DataLoadFailure</description>
                    <description>When iban calculation is not allowed.</description>
                </item>
            </list>
            </exception>
        </member>
        <member name="M:AS.IBAN.DAL.XmlData.LoadCountry(AS.IBAN.Model.ECountry)">
            <summary>
            Loads a Country to a given country code.
            </summary>
            <param name="country_code">The given country code.</param>
            <returns>The loaded country.</returns>
        </member>
        <member name="P:AS.IBAN.DAL.XmlData.XmlNamespace">
            <summary>
            XmlNamespace
            </summary>
        </member>
        <member name="T:AS.IBAN.DAL.IDataService">
            <summary>
            Interface for an dataservice. Defines language specific methods to load specific data.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.DAL.IDataService.LoadBank(System.String)">
            <summary>
            Loads a bank object.
            </summary>
            <param name="bankIdent">The bank ident of the bank that should be loaded.</param>
            <returns>The loaded bank.</returns>
        </member>
        <member name="M:AS.IBAN.DAL.IDataService.LoadRule(System.String)">
            <summary>
            Loads a rule object.
            </summary>
            <param name="ruleID">The rule of of the rule that should be loaded.</param>
            <returns>The loaded rule.</returns>
        </member>
        <member name="M:AS.IBAN.DAL.Default.XmlDataServiceDefault.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="fileNameIbanFormat">Filename of xml file containing all iban formats.</param>
        </member>
        <member name="M:AS.IBAN.DAL.Default.XmlDataServiceDefault.LoadBank(System.String)">
            <summary>
            Loads a bank object.
            </summary>
            <param name="bankIdent">The bank ident of the bank that should be loaded.</param>
            <returns>The loaded bank.</returns>
        </member>
        <member name="M:AS.IBAN.DAL.Default.XmlDataServiceDefault.LoadRule(System.String)">
            <summary>
            Loads a rule object.
            </summary>
            <param name="ruleID">The rule of of the rule that should be loaded.</param>
            <returns>The loaded rule.</returns>
            <exception cref="T:System.NotImplementedException">No default rules.</exception>
        </member>
        <member name="T:AS.IBAN.DAL.DE.XmlDataServiceDE">
            <summary>
            The xml data service implementation for german iban.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.DAL.DE.XmlDataServiceDE.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="fileNameBank">Filename of xml file containing german banks.</param>
            <param name="fileNameIbanFormat">Filename of xml file containing iban formats of each country.</param>
            <param name="fileNameRule">Filename of xml file containing german iban rules.</param>
        </member>
        <member name="M:AS.IBAN.DAL.DE.XmlDataServiceDE.LoadBank(System.String)">
            <summary>
            Loads a bank object.
            </summary>
            <param name="bankIdent">The bank ident of the bank that should be loaded.</param>
            <returns>The loaded bank.</returns>
        </member>
        <member name="M:AS.IBAN.DAL.DE.XmlDataServiceDE.LoadRule(System.String)">
            <summary>
            Loads a rule object.
            </summary>
            <param name="ruleID">The rule of of the rule that should be loaded.</param>
            <returns>The loaded rule.</returns>
        </member>
        <member name="M:AS.IBAN.DAL.DE.XmlDataServiceDE.GetRuleElements(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
            <summary>
            Gets all rule elements out of an XElement.
            </summary>
            <param name="elements">The XElement which includes the rule elements.</param>
            <returns>List of rule elements.</returns>
        </member>
        <member name="M:AS.IBAN.DAL.DE.XmlDataServiceDE.GetRuleElementType(System.String)">
            <summary>
            Gets a RuleType-object for a given key.
            </summary>
            <param name="key">The given Key.</param>
            <returns>The corresponding RuleType.</returns>
        </member>
        <member name="T:AS.IBAN.IbanGetBic">
            <summary>
            Class for getting a bic to a given iban code.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.IbanGetBic.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:AS.IBAN.IbanGetBic.GetBic(System.String)">
            <summary>
            Synchronous method for getting a bic.
            </summary>
            <param name="iban">The given iban code.</param>
            <returns> BIC that belongs to given iban.</returns>
        </member>
        <member name="T:AS.IBAN.Helper.ContainerBootstrapper">
            <summary>
            This class wrapps the unity container.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Helper.ContainerBootstrapper.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:AS.IBAN.Helper.ContainerBootstrapper.Initialize">
            <summary>
            This Method initalizes the unity container.
            </summary>
        </member>
        <member name="M:AS.IBAN.Helper.ContainerBootstrapper.Resolve``1">
            <summary>
            Resolves the type parameter T to an instance of the appropriate type.
            </summary>
            <typeparam name="T">Type of object to return</typeparam>
            <returns>The resolved Type.</returns>
        </member>
        <member name="M:AS.IBAN.Helper.ContainerBootstrapper.Resolve``1(System.String)">
            <summary>
            Resolves the type parameter T to an instance of the appropriate type depending on a special name.
            </summary>
            <typeparam name="T">Type of object to return</typeparam>
            <param name="name">The special name.</param>
            <returns>The resolved Type.</returns>
        </member>
        <member name="P:AS.IBAN.Helper.ContainerBootstrapper.Container">
            <summary>
            Container
            </summary>
        </member>
        <member name="T:AS.IBAN.Helper.IbanException">
            <summary>
            This class defines an iban specific exception class. It provides some special information about an exception.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Helper.IbanException.#ctor(AS.IBAN.Helper.IbanExceptionType)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type of the exception.</param>
        </member>
        <member name="M:AS.IBAN.Helper.IbanException.#ctor(System.Exception,AS.IBAN.Helper.IbanExceptionType)">
            <summary>
            Construcor.
            </summary>
            <param name="ex">The inner exception.</param>
            <param name="type">The type of the exception.</param>
        </member>
        <member name="M:AS.IBAN.Helper.IbanException.ExceptionTypeToMessage(AS.IBAN.Helper.IbanExceptionType)">
            <summary>
            Gets a specific error message denpending to a type.
            </summary>
            <param name="type">The geiven type.</param>
            <returns>The error message.</returns>
        </member>
        <member name="P:AS.IBAN.Helper.IbanException.ExceptionType">
            <summary>
            ExceptionType
            </summary>
        </member>
        <member name="P:AS.IBAN.Helper.IbanException.ExceptionMessage">
            <summary>
            ExceptionMessage
            </summary>
        </member>
        <member name="T:AS.IBAN.Helper.IbanExceptionType">
            <summary>
            Defines possible exception types that could erase during process.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="F:AS.IBAN.Helper.IbanExceptionType.DataLoadFailure">
            <summary>
            Failure during data load.
            </summary>
        </member>
        <member name="F:AS.IBAN.Helper.IbanExceptionType.NoCalculation">
            <summary>
            No iban calculation allowed
            </summary>
        </member>
        <member name="F:AS.IBAN.Helper.IbanExceptionType.BBANError">
            <summary>
            Failure during process of getting the bban
            </summary>
        </member>
        <member name="F:AS.IBAN.Helper.IbanExceptionType.IbanGeneratingError">
            <summary>
            Failure during iban generating
            </summary>
        </member>
        <member name="F:AS.IBAN.Helper.IbanExceptionType.IbanGeneratingNotAllParameters">
            <summary>
            Not all required parameters for iban genrating where submitted
            </summary>
        </member>
        <member name="F:AS.IBAN.Helper.IbanExceptionType.IbanGeneratingFormatting">
            <summary>
            Iban code formatting failure during process of generating
            </summary>
        </member>
        <member name="F:AS.IBAN.Helper.IbanExceptionType.IbanGeneratingCheckDigit">
            <summary>
            Check digit failure
            </summary>
        </member>
        <member name="F:AS.IBAN.Helper.IbanExceptionType.IbanValidatingFormatting">
            <summary>
            Iban code formatting failure during process of validating
            </summary>
        </member>
        <member name="F:AS.IBAN.Helper.IbanExceptionType.BankIdentNotValid">
            <summary>
            A bank ident is not valid
            </summary>
        </member>
        <member name="F:AS.IBAN.Helper.IbanExceptionType.IbanValidationIbanNeeded">
            <summary>
            For iban validation an iban code is needed
            </summary>
        </member>
        <member name="F:AS.IBAN.Helper.IbanExceptionType.GetBicNoAllowedForCountry">
            <summary>
            Getting a bic is not supported yet for this country
            </summary>
        </member>
        <member name="T:AS.IBAN.Helper.RegexHelper">
            <summary>
            A helper class for regular expressions.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Helper.RegexHelper.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:AS.IBAN.Helper.RegexHelper.RegexpMatch(System.String,System.String,System.String@)">
            <summary>
            Checks if a string matches a regular expression and saves a possible replacement in out parameter.
            </summary>
            <param name="regexp">The given regular expression.</param>
            <param name="value">Value that could match the expression.</param>
            <param name="result">out-parameter. If value matches expression a possible replacement is saved in this string.</param>
            <returns>'True' if value matches expression, otherwise 'false'.</returns>
        </member>
        <member name="M:AS.IBAN.Helper.RegexHelper.RegexpMatch(System.String,System.String)">
            <summary>
            Checks if a string matches a regular expression
            </summary>
            <param name="regexp">The given regular expression.</param>
            <param name="value">Value that could match the expression.</param>
            <returns>'True' if value matches expression, otherwise 'false'.</returns>
        </member>
        <member name="T:AS.IBAN.IbanGenerator">
            <summary>
            Class that should be accessed for generating an iban code.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.IbanGenerator.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:AS.IBAN.IbanGenerator.GenerateIban(AS.IBAN.Model.ECountry,System.String,System.String)">
            <summary>
            Synchronous method to generate an iban code.
            </summary>
            <param name="countryCode">Country for which the code should be generated.</param>
            <param name="bankIdent">Band ident for which the code should be generated.</param>
            <param name="accountNumber">Account number for which the code should be generated.</param>
            <returns>The generated iban code and bic code.</returns>
        </member>
        <member name="T:AS.IBAN.IbanValidator">
            <summary>
            Class that should be accessed to validate an iban code.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.IbanValidator.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:AS.IBAN.IbanValidator.ValidateIban(System.String)">
            <summary>
            Synchronous method to validate an iban code.
            </summary>
            <param name="iban">The given iban code.</param>
            <returns>'True' if iban is valid, otherwise 'false'.</returns>
        </member>
        <member name="T:AS.IBAN.Manager.Default.ManagerDefault">
            <summary>
            The default manager class. This class is responsible if no language specific manager was found.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="T:AS.IBAN.Manager.IbanManager">
            <summary>
            An abstract class that defines methods for all iban manager classes.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Manager.IbanManager.#ctor(AS.IBAN.DAL.IDataServiceDefault)">
            <summary>
            Constructor.
            </summary>
            <param name="dataService">An object that implements IDataServiceDefault interface.</param>
        </member>
        <member name="M:AS.IBAN.Manager.IbanManager.Modulo97(AS.IBAN.Model.Iban)">
            <summary>
            Calculates the modulo of 97 for a iban.
            </summary>
            <param name="iban">The given iban for which the modulo 97 should be calculated.</param>
            <returns>The calculated result.</returns>
            <exception cref="T:AS.IBAN.Helper.IbanException">
            <list type="table">
                <item>
                    <term><see cref="T:AS.IBAN.Model.RuleType"/></term>
                    <description>IbanGeneratingCheckDigit</description>
                    <description>When check digit could not be calculated.</description>
                </item>
            </list>
            </exception>
        </member>
        <member name="M:AS.IBAN.Manager.IbanManager.BbanToNumber(System.String)">
            <summary>
            Convcerts bban with letters into bban of numbers.
            </summary>
            <param name="bban">The given bban.</param>
            <returns>The converted bban.</returns>
        </member>
        <member name="M:AS.IBAN.Manager.IbanManager.CountryCodeToNumber(System.String)">
            <summary>
            Converts a country code into a string of numbers.
            </summary>
            <param name="country_code">The given country code.</param>
            <returns>The converted country code.</returns>
        </member>
        <member name="M:AS.IBAN.Manager.IbanManager.GetBBAN(AS.IBAN.Model.Iban)">
            <summary>
            Gets the bban out of an iban.
            </summary>
            <param name="iban">The given iban.</param>
            <returns>The bban.</returns>
            <exception cref="T:AS.IBAN.Helper.IbanException">
            <list type="table">
                <item>
                    <term><see cref="T:AS.IBAN.Model.RuleType"/></term>
                    <description>BBANError</description>
                    <description>When bban could not be calculated.</description>
                </item>
            </list>
            </exception>
        </member>
        <member name="M:AS.IBAN.Manager.IbanManager.GetIban(AS.IBAN.Model.Iban)">
            <summary>
            Gets the iban code out of a Iban object (which does not contain the iban code yet).
            </summary>
            <param name="iban">The given iban object.</param>
            <returns>The iban code as string.</returns>
            /// <exception cref="T:AS.IBAN.Helper.IbanException">
            <list type="table">
                <item>
                    <term><see cref="T:AS.IBAN.Model.RuleType"/></term>
                    <description>IbanGeneratingNotAllParameters</description>
                    <description>If not all parameters are available for iban converting.</description>
                </item>
                <item>
                    <term><see cref="T:AS.IBAN.Model.RuleType"/></term>
                    <description>IbanGeneratingFormatting</description>
                    <description>If iban format is not valid.</description>
                </item>
            </list>
            </exception>
        </member>
        <member name="M:AS.IBAN.Manager.IbanManager.CheckIbanFormatting(AS.IBAN.Model.Iban)">
            <summary>
            Checks if a iban code fits to the country format rules.
            </summary>
            <param name="iban">The given iban.</param>
            <returns>'True' if the format is ok, otherwise 'false'.</returns>
        </member>
        <member name="M:AS.IBAN.Manager.IbanManager.CheckBankIdent(AS.IBAN.Model.Country,System.String)">
            <summary>
            Checks if a band ident fits the country format rules.
            </summary>
            <param name="country">The given country.</param>
            <param name="bankIdent">The given bank ident</param>
            <returns>'True' if the format is ok, otherwise 'false'.</returns>
        </member>
        <member name="M:AS.IBAN.Manager.IbanManager.CheckAccountNumber(AS.IBAN.Model.Country,System.String)">
            <summary>
            Checks the account number. If it's shorter than defined in the country format rules a '0' is prefixed 
            until it fits the required length.
            </summary>
            <param name="country">The given country.</param>
            <param name="accountNumber">The given account number</param>
            <returns>The account number fit to country format.</returns>
        </member>
        <member name="M:AS.IBAN.Manager.IbanManager.ConvertStringToIban(System.String)">
            <summary>
            Converts a given iban as string into a Iban object.
            </summary>
            <param name="iban">The given iban as string.</param>
            <returns>The converted iban object.</returns>
            <exception cref="T:AS.IBAN.Helper.IbanException">
            <list type="table">
                <item>
                    <term><see cref="T:AS.IBAN.Model.RuleType"/></term>
                    <description>IbanValidatingFormatting</description>
                    <description>If iban format is not valid.</description>
                </item>
            </list>
            </exception>
        </member>
        <member name="T:AS.IBAN.Manager.IIbanManager">
            <summary>
            Interface for an iban manager. Defines methods that an iban manager should implement.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Manager.IIbanManager.ValidateIban(System.String)">
            <summary>
            Synchronous method to validate an given iban code.
            </summary>
            <param name="sIban">The given i ban code as string, which should be validated.</param>
            <returns>'True' if iban code is valid, otherwise 'false'.</returns>
        </member>
        <member name="M:AS.IBAN.Manager.IIbanManager.GenerateIban(AS.IBAN.Model.ECountry,System.String,System.String)">
            <summary>
            Synchronous method to generates an iban code and get the bic for that code.
            </summary>
            <param name="countryCode">The country for which the iban should be generated.</param>
            <param name="bankIdent">The bank ident for which the iban should be generated.</param>
            <param name="accountNumber">The account number for which the iban should be generated.</param>
            <returns>The generated result which contains iban and bic.</returns>
        </member>
        <member name="M:AS.IBAN.Manager.IIbanManager.GetBic(System.String)">
            <summary>
            Synchronous method to get a bic to a given iban code.
            </summary>
            <param name="sIban">The given ibanc code.</param>
            <returns>The BIC that belongs to given iban.</returns>
        </member>
        <member name="M:AS.IBAN.Manager.Default.ManagerDefault.#ctor(AS.IBAN.DAL.IDataService)">
            <summary>
            Constructor of class.
            </summary>
            <param name="dataService">The</param>
        </member>
        <member name="M:AS.IBAN.Manager.Default.ManagerDefault.ValidateIban(System.String)">
            <summary>
            Synchronous method to validate an given iban code.
            </summary>
            <param name="sIban">The given i ban code as string, which should be validated.</param>
            <returns>'True' if iban code is valid, otherwise 'false'.</returns>
        </member>
        <member name="M:AS.IBAN.Manager.Default.ManagerDefault.GenerateIban(AS.IBAN.Model.ECountry,System.String,System.String)">
            <summary>
            Synchronous method to generates an iban code and get the bic for that code.
            </summary>
            <param name="countryCode">The country for which the iban should be generated.</param>
            <param name="bankIdent">The bank ident for which the iban should be generated.</param>
            <param name="accountNumber">The account number for which the iban should be generated.</param>
            <returns>The generated result which contains iban and bic.</returns>
            <exception cref="T:AS.IBAN.Helper.IbanException">
            <list type="table">
                <item>
                    <term><see cref="T:AS.IBAN.Model.RuleType"/></term>
                    <description>BankIdentNotValid</description>
                    <description>When a given bank id is not valid (no results in datastore).</description>
                </item>
            </list>
            </exception>
        </member>
        <member name="M:AS.IBAN.Manager.Default.ManagerDefault.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:AS.IBAN.Manager.Default.ManagerDefault.GetBic(System.String)">
            <summary>
            Synchronous method to get a bic to a given iban code.
            </summary>
            <param name="sIban">The given ibanc code.</param>
            <returns>The BIC that belongs to given iban.</returns>
        </member>
        <member name="T:AS.IBAN.Manager.DE.ManagerDE">
            <summary>
            The german manager class.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Manager.DE.ManagerDE.#ctor(AS.IBAN.DAL.IDataService)">
            <summary>
            Constructor.
            </summary>
            <param name="dataservice">An object that implements IDataService interface.</param>
        </member>
        <member name="M:AS.IBAN.Manager.DE.ManagerDE.ValidateIban(System.String)">
            <summary>
            Synchronous method to validate an given iban code.
            </summary>
            <param name="sIban">The given i ban code as string, which should be validated.</param>
            <returns>'True' if iban code is valid, otherwise 'false'.</returns>
        </member>
        <member name="M:AS.IBAN.Manager.DE.ManagerDE.GenerateIban(AS.IBAN.Model.ECountry,System.String,System.String)">
            <summary>
            Synchronous method to generates an iban code and get the bic for that code.
            </summary>
            <param name="countryCode">The country for which the iban should be generated.</param>
            <param name="bankIdent">The bank ident for which the iban should be generated.</param>
            <param name="accountNumber">The account number for which the iban should be generated.</param>
            <returns>The generated result which contains iban and bic.</returns>
            <exception cref="T:AS.IBAN.Helper.IbanException">
            <list type="table">
                <item>
                    <term><see cref="T:AS.IBAN.Model.RuleType"/></term>
                    <description>NoCalculation</description>
                    <description>When iban calculation is not allowed.</description>
                </item>
            </list>
            </exception>
        </member>
        <member name="M:AS.IBAN.Manager.DE.ManagerDE.Dispose">
            <summary>
            Dispose method.
            </summary>
        </member>
        <member name="M:AS.IBAN.Manager.DE.ManagerDE.ConsiderRule(AS.IBAN.Model.Bank,AS.IBAN.Model.Rule,AS.IBAN.Model.Country,System.String)">
            <summary>
            Considers rules. When there are rules that match to bank ident or account number, those rules take effect.
            </summary>
            <param name="bank">The bank, for which the rules depend to.</param>
            <param name="rule">The rules.</param>
            <param name="country">The country the rules depend to.</param>
            <param name="accountNumber">The account number for which the rules should be checked for.</param>
            <returns>The generated result.</returns>
            <exception cref="T:AS.IBAN.Helper.IbanException">
            <list type="table">
                <item>
                    <term><see cref="T:AS.IBAN.Model.RuleType"/></term>
                    <description>NoCalculation</description>
                    <description>When iban calculation is not allowed.</description>
                </item>
            </list>
            </exception>
        </member>
        <member name="M:AS.IBAN.Manager.DE.ManagerDE.GetBic(System.String)">
            <summary>
            Synchronous method to get a bic to a given iban code.
            </summary>
            <param name="sIban">The given ibanc code.</param>
            <returns>The BIC that belongs to given iban.</returns>
        </member>
        <member name="T:AS.IBAN.Model.Bank">
            <summary>
            Class reprasenting a bank.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Model.Bank.Dispose">
            <summary>
            Implements <see cref="T:System.IDisposable"/>
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Bank.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Bank.BankIdentification">
            <summary>
            BankIdentification
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Bank.Rule">
            <summary>
            Rule
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Bank.BIC">
            <summary>
            BIC
            </summary>
        </member>
        <member name="T:AS.IBAN.Model.BankIdentifierCode">
            <summary>
            Class reprasenting a bank identifier code (BIC).
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Model.BankIdentifierCode.Dispose">
            <summary>
            Implements <see cref="T:System.IDisposable"/>
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.BankIdentifierCode.Bic">
            <summary>
            Bic
            </summary>
        </member>
        <member name="T:AS.IBAN.Model.Country">
            <summary>
            Class reprasenting a country.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Model.Country.Equals(System.Object)">
            <summary>
            Compares two country objects.
            </summary>
            <param name="obj">The country object the current object should be compared to.</param>
            <returns>'True' if the two object are equal, otherwise 'false'.</returns>
        </member>
        <member name="M:AS.IBAN.Model.Country.GetHashCode">
            <summary>
            Overrides GetHashCode.
            </summary>
            <returns>The hash code for this object.</returns>
        </member>
        <member name="M:AS.IBAN.Model.Country.Dispose">
            <summary>
            Implements <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Country.CountryType">
            <summary>
            CountryType
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Country.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Country.CountryCode">
            <summary>
            CountryCode
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Country.RegExp">
            <summary>
            RegExp
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Country.BankIdentLength">
            <summary>
            BankIdentLength
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Country.AccountNumberLength">
            <summary>
            AccountNumberLength
            </summary>
        </member>
        <member name="T:AS.IBAN.Model.ECountry">
            <summary>
            Enumeration of all possible countries (country code).
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.AT">
            <summary>
            Austria
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.BE">
            <summary>
            Belgium
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.BG">
            <summary>
            Bulgaria
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.HR">
            <summary>
            Croatia
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.CY">
            <summary>
            Cyprus
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.CZ">
            <summary>
            Czech Republic
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.DK">
            <summary>
            Denmark
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.EE">
            <summary>
            Estonia
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.FI">
            <summary>
            Finland
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.FR">
            <summary>
            France
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.DE">
            <summary>
            Germany
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.GR">
            <summary>
            Greece
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.HU">
            <summary>
            Hungary
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.IS">
            <summary>
            Iceland
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.IE">
            <summary>
            Ireland
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.IT">
            <summary>
            Italia
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.LV">
            <summary>
            Latvia
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.LI">
            <summary>
            Lichtenstein
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.LT">
            <summary>
            Lithuania
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.LU">
            <summary>
            Luxembourg
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.MT">
            <summary>
            Malta
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.MC">
            <summary>
            Monaco
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.NL">
            <summary>
            Netherlands
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.NO">
            <summary>
            Norway
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.PL">
            <summary>
            Poland
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.PT">
            <summary>
            Portugal
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.RO">
            <summary>
            Romania
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.SK">
            <summary>
            Slovakia
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.SI">
            <summary>
            Slovenia
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.ES">
            <summary>
            Spain
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.SE">
            <summary>
            Sweden
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.CH">
            <summary>
            Switzerland
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.ECountry.GB">
            <summary>
            United Kingdom
            </summary>
        </member>
        <member name="T:AS.IBAN.Model.IbanBic">
            <summary>
            Class reprasenting a generating result of containing iban and bic.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Model.IbanBic.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.IbanBic.IBAN">
            <summary>
            IBAN
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.IbanBic.BIC">
            <summary>
            BIC
            </summary>
        </member>
        <member name="T:AS.IBAN.Model.Iban">
            <summary>
            Class reprasenting a iban.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Model.Iban.Dispose">
            <summary>
            Implements <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:AS.IBAN.Model.Iban.Equals(System.Object)">
            <summary>
            Compares two iban objects.
            </summary>
            <param name="obj">The iban object the current object should be compared to.</param>
            <returns>'True' if the two object are equal, otherwise 'false'.</returns>
        </member>
        <member name="M:AS.IBAN.Model.Iban.GetHashCode">
            <summary>
            Overrides GetHashCode.
            </summary>
            <returns>The hash code for this object.</returns>
        </member>
        <member name="P:AS.IBAN.Model.Iban.IBAN">
            <summary>
            IBAN
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Iban.BBAN">
            <summary>
            BBAN
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Iban.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Iban.CheckDigit">
            <summary>
            CheckDigit
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Iban.Bank">
            <summary>
            BankIdent
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Iban.AccountNumber">
            <summary>
            AccountNumber
            </summary>
        </member>
        <member name="T:AS.IBAN.Model.Rule">
            <summary>
            Class reprasenting a rule.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Model.Rule.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Rule.RuleID">
            <summary>
            RuleID
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.Rule.RuleElements">
            <summary>
            RuleElements
            </summary>
        </member>
        <member name="T:AS.IBAN.Model.RuleElement">
            <summary>
            Class reprasenting a RuleElemt.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="M:AS.IBAN.Model.RuleElement.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:AS.IBAN.Model.RuleElement.Dispose">
            <summary>
            Implements <see cref="T:System.IDisposable"/>
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.RuleElement.RuleType">
            <summary>
            RuleType
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.RuleElement.Attributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.RuleElement.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:AS.IBAN.Model.RuleElement.Childs">
            <summary>
            Childs
            </summary>
        </member>
        <member name="T:AS.IBAN.Model.RuleType">
            <summary>
            Enumeration of all possible rule types.
            <list type="table">
                <item>
                    <term>Version</term>
                    <description>1.0  Nov. 2013</description>
                </item>
                <item>
                    <term>Author</term>
                    <description>AVENTUM SOLUTIONS GmbH (<a target="_blank" href="http://www.aventum-solutions.de">http://www.aventum-solutions.de</a>)</description>
                </item>
            </list>
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.RuleType.No_Calculation">
            <summary>
            No_Calculation Type
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.RuleType.Mappings_Kto">
            <summary>
            Mappings_Kto Type
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.RuleType.Mappings_KtoKr">
            <summary>
            Mappings_KtoKr Type
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.RuleType.Mappings_Blz">
            <summary>
            Mappings_Blz Type
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.RuleType.Modification_Kto">
            <summary>
            Modification_Kto Type
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.RuleType.Mapping">
            <summary>
            Mapping Type
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.RuleType.Kto_Number_Range">
            <summary>
            Kto_Number_Range Type
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.RuleType.Modification">
            <summary>
            Modification Type
            </summary>
        </member>
        <member name="F:AS.IBAN.Model.RuleType.Mappings_Bic">
            <summary>
            Mappings_Bic Type
            </summary>
        </member>
    </members>
</doc>
